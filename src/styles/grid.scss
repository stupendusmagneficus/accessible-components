// Set the container width, and override it for fixed navbars in media queries.
.container {
  @include make-container();
  @include make-container-max-widths();
}

.container-fluid {
  @include make-container();
}

// Rows contain and clear the floats of your columns.
.row {
  @include make-row();
}

// Common properties for all breakpoints
%grid-column {
  position: relative;
  width: 100%;
  min-height: 1px; // Prevent columns from collapsing when empty

  @each $breakpoint in map-keys($grid-gutters) {
    @include media-breakpoint-up($breakpoint) {
      $padding: map-get($grid-gutters, $breakpoint);

      padding-right: $padding / 2;
      padding-left: $padding / 2;
    }
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint);

  // Allow columns to stretch full width below their breakpoints
  @for $i from 1 through $grid-columns {
    .col#{$infix}-#{$i} {
      @extend %grid-column;
    }
  }

  .col#{$infix},
  .col#{$infix}-auto {
    @extend %grid-column;
  }

  @include media-breakpoint-up($breakpoint) {
    // Provide basic `.col-{bp}` classes for equal-width flexbox columns
    %col#{$infix},
    .col#{$infix} {
      flex-basis: 0;
      flex-grow: 1;
      max-width: 100%;
    }

    %col#{$infix}-auto,
    .col#{$infix}-auto {
      flex: 0 0 auto;
      width: auto;
      max-width: none; // Reset earlier grid tiers
    }

    @for $i from 1 through $grid-columns {
      %col#{$infix}-#{$i},
      .col#{$infix}-#{$i} {
        flex: 0 0 percentage($i / $grid-columns);
        // Add a `max-width` to ensure content within each column does not blow out
        // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
        // do not appear to require this.
        max-width: percentage($i / $grid-columns);
      }
    }

    // `$columns - 1` because offsetting by the width of an entire row isn't possible
    @for $i from 0 through ($grid-columns - 1) {
      @if not($infix == '' and $i == 0) {
        // Avoid emitting useless .offset-0
        %offset#{$infix}-#{$i},
        .offset#{$infix}-#{$i} {
          $num: $i / $grid-columns;

          margin-left: if($num == 0, 0, percentage($num));
        }
      }
    }

    @for $i from 1 through $grid-columns {
      %order#{$infix}-#{$i},
      .order#{$infix}-#{$i} {
        order: $i;
      }
    }
  }
}